name: Deploy Omni-Index

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to use for the Docker image. E.g., v0.1.0-alpha1"
        required: true
        type: string

env:
  IMAGE_NAME: prenaissance/omni-index
  TARGET_PLATFORMS: linux/amd64,linux/arm64

jobs:
  build:
    strategy:
      matrix:
        image:
          - name: backend
            repo: prenaissance/omni-index
            target: runner
          - name: migration
            repo: prenaissance/omni-index-migration
            target: migration
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Get the version
        id: get_version
        run: |
          FULL_VERSION=${{ github.event.inputs.tag }}
          if [ -z "$FULL_VERSION" ]; then
            FULL_VERSION=${{ github.ref_name }}
          fi
          echo "FULL_VERSION=$FULL_VERSION" >> $GITHUB_OUTPUT
      - name: Get version fragments
        id: get_version_fragments
        run: |
          echo "MAJOR_VERSION=$(echo ${{ steps.get_version.outputs.FULL_VERSION }} | cut -d. -f1 | sed 's/v//')" >> $GITHUB_OUTPUT
          echo "VERSION=$(echo ${{ steps.get_version.outputs.FULL_VERSION }} | sed 's/v//')" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to container registry
        run: docker login -u prenaissance -p ${{ secrets.DOCKER_TOKEN }}

      - name: Setup docker tags
        id: docker_tags
        run: |
          TAGS="${{ env.IMAGE_NAME }}:${{ steps.get_version_fragments.outputs.VERSION }}"
          if [ "${{ github.event_name }}" == "push" ]; then
            if [ "${{steps.get_version_fragments.outputs.MAJOR_VERSION}}" != "0" ]; then
              TAGS=${TAGS},${{ env.IMAGE_NAME }}:${{ steps.get_version_fragments.outputs.MAJOR_VERSION }}
            fi
            TAGS=${TAGS},${{ env.IMAGE_NAME }}:latest
          fi
          echo "TAGS=$TAGS" >> $GITHUB_OUTPUT

      - name: Build and push ${{matrix.image.name}} image to registry
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/backend/Dockerfile
          target: ${{ matrix.image.target }}
          push: true
          platforms: ${{ env.TARGET_PLATFORMS }}
          tags: ${{ steps.docker_tags.outputs.TAGS }}
