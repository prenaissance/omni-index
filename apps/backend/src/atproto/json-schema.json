{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://example.org/schemas/atproto-lexicon.json",
  "title": "AT Protocol Lexicon",
  "description": "JSON Schema for AT Protocol Lexicon definitions.",
  "type": "object",
  "properties": {
    "lexicon": {
      "type": "number",
      "description": "The lexicon version number (currently 1).",
      "enum": [1]
    },
    "id": {
      "type": "string",
      "description": "A unique identifier for this lexicon (e.g., 'app.bsky.feed.post').",
      "pattern": "^([A-Za-z0-9_-]+\\.)*([A-Za-z0-9_-]+)$"
    },
    "revision": {
      "type": "integer",
      "description": "Incrementing revision number.",
      "minimum": 1
    },
    "description": {
      "type": "string",
      "description": "Optional description of this lexicon."
    },
    "defs": {
      "type": "object",
      "description": "A mapping of definition names to definition objects.",
      "patternProperties": {
        "^[_a-zA-Z0-9]+$": {
          "$ref": "#/definitions/definition"
        }
      },
      "additionalProperties": false
    }
  },
  "required": ["lexicon", "id", "defs"],
  "additionalProperties": true,

  "definitions": {
    "definition": {
      "oneOf": [
        { "$ref": "#/definitions/recordDef" },
        { "$ref": "#/definitions/objectDef" },
        { "$ref": "#/definitions/procedureDef" },
        { "$ref": "#/definitions/queryDef" },
        { "$ref": "#/definitions/tokenDef" }
      ]
    },
    "recordDef": {
      "type": "object",
      "description": "Describes a record definition.",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["record"]
        },
        "description": {
          "type": "string"
        },
        "record": {
          "type": "object",
          "description": "Record-specific metadata (keys, constraints, etc.).",
          "properties": {
            "key": {
              "type": "string",
              "description": "Unique record key."
            },
            "record": {
              "type": "string",
              "description": "Record-specific schema or details."
            }
          },
          "additionalProperties": true
        }
      },
      "required": ["type"]
    },
    "objectDef": {
      "type": "object",
      "description": "Describes an object definition.",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["object"]
        },
        "description": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "description": "A mapping of property names to schema types.",
          "patternProperties": {
            "^[_a-zA-Z0-9]+$": {
              "$ref": "#/definitions/schemaType"
            }
          },
          "additionalProperties": false
        },
        "required": {
          "type": "array",
          "description": "List of required property names.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["type", "properties"]
    },
    "procedureDef": {
      "type": "object",
      "description": "Describes a procedure definition.",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["procedure"]
        },
        "description": {
          "type": "string"
        },
        "input": {
          "type": "object",
          "properties": {
            "schema": {
              "$ref": "#/definitions/schemaType"
            }
          },
          "additionalProperties": false
        },
        "output": {
          "type": "object",
          "properties": {
            "schema": {
              "$ref": "#/definitions/schemaType"
            }
          },
          "additionalProperties": false
        }
      },
      "required": ["type"]
    },
    "queryDef": {
      "type": "object",
      "description": "Describes a query definition.",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["query"]
        },
        "description": {
          "type": "string"
        },
        "parameters": {
          "type": "object",
          "description": "A mapping of parameter names to schema types.",
          "patternProperties": {
            "^[_a-zA-Z0-9]+$": {
              "$ref": "#/definitions/schemaType"
            }
          },
          "additionalProperties": false
        },
        "output": {
          "type": "object",
          "properties": {
            "schema": {
              "$ref": "#/definitions/schemaType"
            }
          },
          "additionalProperties": false
        }
      },
      "required": ["type"]
    },
    "tokenDef": {
      "type": "object",
      "description": "Describes a token definition (single unstructured value).",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["token"]
        },
        "description": {
          "type": "string"
        }
      },
      "required": ["type"]
    },
    "schemaType": {
      "type": "object",
      "description": "A JSON Schema-like descriptor for property types.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Base type, e.g., 'string', 'object', 'array', etc."
        },
        "enum": {
          "type": "array",
          "description": "Allowed values if 'enum' is used.",
          "items": {
            "type": "string"
          }
        },
        "format": {
          "type": "string",
          "description": "Format hint, e.g., 'date-time'."
        },
        "default": {
          "description": "Default value of the property."
        },
        "properties": {
          "type": "object",
          "description": "Nested object properties if type is 'object'.",
          "patternProperties": {
            "^[_a-zA-Z0-9]+$": {
              "$ref": "#/definitions/schemaType"
            }
          },
          "additionalProperties": false
        },
        "required": {
          "type": "array",
          "description": "List of property names that are required.",
          "items": {
            "type": "string"
          }
        },
        "items": {
          "$ref": "#/definitions/schemaType",
          "description": "Item schema if type is 'array'."
        }
      },
      "additionalProperties": false
    }
  }
}
